{"version":3,"sources":["app-header.tsx","grid-cell.tsx","utils.ts","app.tsx","reportWebVitals.ts","index.tsx"],"names":["Header","useState","expanded","setExpanded","className","onClick","height","width","points","style","fill","GridCell","props","color","isRunning","onSelectCell","backgroundColor","initialDeadCell","state","age","initialAliveCell","colorThemes","name","colors","shapes","cols","speeds","App","setIsRunning","currentColor","setCurrentColor","currentSpeed","setCurrentSpeed","generation","setGeneration","Array","from","length","rows","v","i","gridCells","setGridCells","setShape","shape","newGridCells","middle","getGridFromShape","useEffect","timer","window","setInterval","arrayLength","cell","adjacentAlive","isAlive","push","generationUpdate","clearInterval","map","theme","index","toggleCell","disabled","clearGrid","type","min","max","value","id","onChange","event","target","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4c70054a.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\n\r\nimport \"./app-header.css\";\r\n\r\nexport const Header: React.FC = () => {\r\n  const [expanded, setExpanded] = useState(false);\r\n  return (\r\n    <header className=\"header\">\r\n      CONWAY COLOR LIFE\r\n      <div className=\"description\">\r\n        Conway Color Life is an example of a cellular automaton, a collection of cells that change over time based on a set of simple rules. Click cells to turn them alive, and then press the Start button to see what happens.\r\n        {!expanded &&\r\n          <div className=\"expand\" onClick={() => setExpanded(true)}>\r\n            Learn More\r\n            <svg height=\"12\" width=\"16\" className=\"icon\">\r\n              <polygon points=\"8,12 0,0 16,0\" style={{fill:\"aliceblue\"}} />\r\n            </svg>\r\n          </div>\r\n        }\r\n        {expanded &&\r\n          <div className=\"more-content\">\r\n            <div>Cells are either alive or dead. At each generation a cell is marked as alive or dead based on the following rules:</div>\r\n            <ul>\r\n              <li>A living cell with less than 2 neighbors dies</li>\r\n              <li>A living cell with 2 or 3 neighbors lives</li>\r\n              <li>A living cell with more than 3 neighbors dies</li>\r\n              <li>A dead cell with 3 living neighbors becomes alive</li>\r\n            </ul>\r\n            <div>With each generation that a cell survives, the cell ages. Cells change color as they age based on the selected color theme.</div>\r\n            <div className=\"expand\" onClick={() => setExpanded(false)}>\r\n              Less\r\n              <svg height=\"12\" width=\"16\" className=\"icon\">\r\n                <polygon points=\"8,0 16,12 0,12\" style={{fill:\"aliceblue\"}} />\r\n              </svg>\r\n            </div>\r\n          </div>\r\n        }\r\n      </div>\r\n    </header>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nimport \"./grid-cell.css\";\r\n\r\ninterface IProps {\r\n  index: number;\r\n  onSelectCell: () => void;\r\n  isRunning: boolean;\r\n  color: string;\r\n}\r\n\r\nexport const GridCell: React.FC<IProps> = (props) => {\r\n  const { color, isRunning, onSelectCell} = props;\r\n  return (\r\n    <div className=\"cell\" style={{backgroundColor: color}} onClick={() => !isRunning && onSelectCell()}/>\r\n  );\r\n}\r\n","\r\nexport interface Cell {\r\n  state: number,\r\n  age: number;\r\n}\r\nexport const initialDeadCell: Cell = {state: 0, age: 0};\r\nexport const initialAliveCell: Cell = {state: 1, age: 0};\r\n\r\nexport interface ColorTheme {\r\n  name: string,\r\n  colors: string[]\r\n}\r\n\r\nexport const colorThemes: ColorTheme[] = [\r\n  { name: \"Purple-Yellow\",\r\n    colors: [\"#8400ab\", \"#bb009d\", \"#e50089\", \"#ff0073\", \"#ff355b\", \"#ff6543\", \"#ff8e2a\", \"#ffb407\", \"#ffd900\", \"#fcfb2d\",\r\n    \"#ffd900\", \"#ffb407\", \"#ff8e2a\", \"#ff6543\", \"#ff355b\", \"#ff0073\", \"#e50089\", \"#bb009d\", \"#8400ab\"]\r\n  },\r\n  { name: \"Orange-Blue\",\r\n    colors: [\"#ff7e00\", \"#ff5e1c\", \"#ff2e33\", \"#ff004a\", \"#ff0064\", \"#ff0081\", \"#f100a0\", \"#cf00c1\", \"#9900e2\", \"#0000ff\",\r\n      \"#9900e2\", \"#cf00c1\", \"#f100a0\", \"#ff0081\", \"#ff0064\", \"#ff004a\", \"#ff2e33\", \"#ff5e1c\", \"#ff7e00\"]\r\n  },\r\n  { name: \"Sky-Rose\",\r\n  colors: [\"#00b5e2\", \"#19adee\", \"#4ba2f5\", \"#7795f4\", \"#a084ea\", \"#c270d6\", \"#dd59b9\", \"#ef4294\", \"#f5326b\", \"#ef3340\",\r\n    \"#f5326b\", \"#ef4294\", \"#dd59b9\", \"#c270d6\", \"#a084ea\", \"#7795f4\", \"#4ba2f5\", \"#19adee\", \"#00b5e2\"]\r\n  },\r\n  { name: \"Indigo-Fuchsia\",\r\n    colors: [\"#7200fe\", \"#8a00fb\", \"#9e00f8\", \"#b000f4\", \"#c000f1\", \"#cf00ee\", \"#dc00ea\", \"#e900e7\", \"#f400e4\", \"#ff00e1\",\r\n      \"#f400e4\", \"#e900e7\", \"#dc00ea\", \"#cf00ee\", \"#c000f1\", \"#b000f4\", \"#9e00f8\", \"#8a00fb\", \"#7200fe\"]\r\n  },\r\n  { name: \"Magenta-Lime\",\r\n    colors: [\"#a31746\", \"#b62a40\", \"#c73f39\", \"#d35530\", \"#dd6c24\", \"#e28315\", \"#e39b00\", \"#dfb400\", \"#d8cc02\", \"#cbe426\",\r\n      \"#d8cc02\", \"#dfb400\", \"#e39b00\", \"#e28315\", \"#dd6c24\", \"#d35530\", \"#c73f39\", \"#b62a40\", \"#a31746\"]\r\n  },\r\n  { name: \"Green-Red\",\r\n    colors: [\"#00ff00\", \"#6fed00\", \"#98db00\", \"#b6c700\", \"#cdb200\", \"#df9b00\", \"#ee8200\", \"#f86600\", \"#fe4400\", \"#ff0000\",\r\n      \"#fe4400\", \"#f86600\", \"#ee8200\", \"#df9b00\", \"#cdb200\", \"#b6c700\", \"#98db00\", \"#6fed00\", \"#00ff00\"]\r\n  },\r\n  { name: \"Confetti\",\r\n    colors: [\"#ff0000\", \"#ffa500\", \"#ffff00\", \"#008000\", \"#0000ff\", \"#4b0082\", \"#ee82ee\", \"#4b0082\", \"#0000ff\", \"#008000\", \"#ffff00\", \"#ffa500\", \"#ff0000\"]\r\n  },\r\n  { name: \"Valentine\",\r\n    colors: [\"#fa6e6e\", \"#ff6374\", \"#ff587c\", \"#ff4b86\", \"#ff3d92\", \"#ff2da0\", \"#ff1ab0\", \"#ff02c1\", \"#ff00d4\", \"#ff00e8\",\r\n      \"#ff00d4\", \"#ff02c1\", \"#ff1ab0\", \"#ff2da0\", \"#ff3d92\", \"#ff4b86\", \"#ff587c\", \"#ff6374\", \"#fa6e6e\"]\r\n  },\r\n];\r\n\r\nexport interface Shape {\r\n  name: string,\r\n}\r\n\r\nexport const shapes: Shape[] = [\r\n  { name: \"Big Mug\" },\r\n  { name: \"Snake\" },\r\n  { name: \"Bucket\" },\r\n  { name: \"Double Bucket\" },\r\n  { name: \"Hexa-Bucket\" },\r\n  { name: \"Glider\" },\r\n  { name: \"Dragons\" },\r\n  { name: \"R-Pentomino\" },\r\n];\r\n\r\n\r\nexport const getGridFromShape = (shape: string, rows: number, cols: number) => {\r\n  const newGridCells = Array.from({length: rows * cols}, (v, i) => initialDeadCell);\r\n  const middle = rows * cols * .5 - rows * .5;\r\n  if (shape === \"R-Pentomino\") {\r\n    newGridCells[middle - 1] = {state: 1, age: 0};\r\n    newGridCells[middle] = {state: 1, age: 0};\r\n    newGridCells[middle - rows] = {state: 1, age: 0};\r\n    newGridCells[middle - rows + 1] = {state: 1, age: 0};\r\n    newGridCells[middle + rows] = {state: 1, age: 0};\r\n  } else if (shape === \"Snake\") {\r\n    newGridCells[middle - 1] = {state: 1, age: 0};\r\n    newGridCells[middle] = {state: 1, age: 0};\r\n    newGridCells[middle - 1 - rows] = {state: 1, age: 0};\r\n    newGridCells[middle + rows] = {state: 1, age: 0};\r\n    newGridCells[middle - rows * 2- 1] = {state: 1, age: 0};\r\n    newGridCells[middle - rows * 2] = {state: 1, age: 0};\r\n    newGridCells[middle + rows * 2 - 1] = {state: 1, age: 0};\r\n    newGridCells[middle + rows * 2] = {state: 1, age: 0};\r\n    newGridCells[middle - rows * 3] = {state: 1, age: 0};\r\n    newGridCells[middle - 1 + rows * 3] = {state: 1, age: 0};\r\n    newGridCells[middle - rows * 4 - 1] = {state: 1, age: 0};\r\n    newGridCells[middle - rows * 4] = {state: 1, age: 0};\r\n    newGridCells[middle + rows * 4 - 1] = {state: 1, age: 0};\r\n    newGridCells[middle + rows * 4] = {state: 1, age: 0};\r\n  } else if (shape === \"Bucket\") {\r\n    newGridCells[middle - 1] = {state: 1, age: 0};\r\n    newGridCells[middle] = {state: 1, age: 0};\r\n    newGridCells[middle + 1] = {state: 1, age: 0};\r\n    newGridCells[middle - 1 - rows] = {state: 1, age: 0};\r\n    newGridCells[middle - 1 - rows * 2] = {state: 1, age: 0};\r\n    newGridCells[middle + 1 - rows] = {state: 1, age: 0};\r\n    newGridCells[middle + 1 - rows * 2] = {state: 1, age: 0};\r\n  } else if (shape === \"Big Mug\") {\r\n    newGridCells[middle - 5] = {state: 1, age: 0};\r\n    newGridCells[middle - 2] = {state: 1, age: 0};\r\n    newGridCells[middle - 1] = {state: 1, age: 0};\r\n    newGridCells[middle] = {state: 1, age: 0};\r\n    newGridCells[middle + 1] = {state: 1, age: 0};\r\n    newGridCells[middle + 2] = {state: 1, age: 0};\r\n    newGridCells[middle + 5] = {state: 1, age: 0};\r\n    newGridCells[middle - 5 + rows] = {state: 1, age: 0};\r\n    newGridCells[middle - 4 + rows] = {state: 1, age: 0};\r\n    newGridCells[middle - 3 + rows] = {state: 1, age: 0};\r\n    newGridCells[middle - 2 + rows] = {state: 1, age: 0};\r\n    newGridCells[middle - 1 + rows] = {state: 1, age: 0};\r\n    newGridCells[middle + rows] = {state: 1, age: 0};\r\n    newGridCells[middle + 1 + rows] = {state: 1, age: 0};\r\n    newGridCells[middle + 2 + rows] = {state: 1, age: 0};\r\n    newGridCells[middle + 3 + rows] = {state: 1, age: 0};\r\n    newGridCells[middle + 4 + rows] = {state: 1, age: 0};\r\n    newGridCells[middle + 5 + rows] = {state: 1, age: 0};\r\n    newGridCells[middle - 2 + rows * 2] = {state: 1, age: 0};\r\n    newGridCells[middle - 1 + rows * 2] = {state: 1, age: 0};\r\n    newGridCells[middle + rows * 2] = {state: 1, age: 0};\r\n    newGridCells[middle + 1 + rows * 2] = {state: 1, age: 0};\r\n    newGridCells[middle + 2 + rows * 2] = {state: 1, age: 0};\r\n    newGridCells[middle - 5 - rows] = {state: 1, age: 0};\r\n    newGridCells[middle - 4 - rows] = {state: 1, age: 0};\r\n    newGridCells[middle - 3 - rows] = {state: 1, age: 0};\r\n    newGridCells[middle - 2 - rows] = {state: 1, age: 0};\r\n    newGridCells[middle - 1 - rows] = {state: 1, age: 0};\r\n    newGridCells[middle - rows] = {state: 1, age: 0};\r\n    newGridCells[middle + 1 - rows] = {state: 1, age: 0};\r\n    newGridCells[middle + 2 - rows] = {state: 1, age: 0};\r\n    newGridCells[middle + 3 - rows] = {state: 1, age: 0};\r\n    newGridCells[middle + 4 - rows] = {state: 1, age: 0};\r\n    newGridCells[middle + 5 - rows] = {state: 1, age: 0};\r\n    newGridCells[middle + 2 - rows * 2] = {state: 1, age: 0};\r\n    newGridCells[middle + 1 - rows * 2] = {state: 1, age: 0};\r\n    newGridCells[middle - rows * 2] = {state: 1, age: 0};\r\n    newGridCells[middle - 1 - rows * 2] = {state: 1, age: 0};\r\n    newGridCells[middle - 2 - rows * 2] = {state: 1, age: 0};\r\n  } else if (shape === \"Double Bucket\") {\r\n    newGridCells[middle - 1 - 2] = {state: 1, age: 0};\r\n    newGridCells[middle - 2] = {state: 1, age: 0};\r\n    newGridCells[middle + 1 - 2] = {state: 1, age: 0};\r\n    newGridCells[middle - 1 - rows - 2] = {state: 1, age: 0};\r\n    newGridCells[middle - 1 - rows * 2 - 2] = {state: 1, age: 0};\r\n    newGridCells[middle + 1 - rows - 2] = {state: 1, age: 0};\r\n    newGridCells[middle + 1 - rows * 2 - 2] = {state: 1, age: 0};\r\n\r\n    newGridCells[middle - 1 + 3] = {state: 1, age: 0};\r\n    newGridCells[middle + 3] = {state: 1, age: 0};\r\n    newGridCells[middle + 1 + 3] = {state: 1, age: 0};\r\n    newGridCells[middle - 1 - rows + 3] = {state: 1, age: 0};\r\n    newGridCells[middle - 1 - rows * 2 + 3] = {state: 1, age: 0};\r\n    newGridCells[middle + 1 - rows + 3] = {state: 1, age: 0};\r\n    newGridCells[middle + 1 - rows * 2 + 3] = {state: 1, age: 0};\r\n  } else if (shape === \"Hexa-Bucket\") {\r\n    newGridCells[middle - 1 - 2] = {state: 1, age: 0};\r\n    newGridCells[middle - 2] = {state: 1, age: 0};\r\n    newGridCells[middle + 1 - 2] = {state: 1, age: 0};\r\n    newGridCells[middle - 1 - rows - 2] = {state: 1, age: 0};\r\n    newGridCells[middle - 1 - rows * 2 - 2] = {state: 1, age: 0};\r\n    newGridCells[middle + 1 - rows - 2] = {state: 1, age: 0};\r\n    newGridCells[middle + 1 - rows * 2 - 2] = {state: 1, age: 0};\r\n\r\n    newGridCells[middle - 1 - 8] = {state: 1, age: 0};\r\n    newGridCells[middle - 8] = {state: 1, age: 0};\r\n    newGridCells[middle + 1 - 8] = {state: 1, age: 0};\r\n    newGridCells[middle - 1 - rows - 8] = {state: 1, age: 0};\r\n    newGridCells[middle - 1 - rows * 2 - 8] = {state: 1, age: 0};\r\n    newGridCells[middle + 1 - rows - 8] = {state: 1, age: 0};\r\n    newGridCells[middle + 1 - rows * 2 - 8] = {state: 1, age: 0};\r\n\r\n    newGridCells[middle - 1 - 13] = {state: 1, age: 0};\r\n    newGridCells[middle - 13] = {state: 1, age: 0};\r\n    newGridCells[middle + 1 - 13] = {state: 1, age: 0};\r\n    newGridCells[middle - 1 - rows - 13] = {state: 1, age: 0};\r\n    newGridCells[middle - 1 - rows * 2 - 13] = {state: 1, age: 0};\r\n    newGridCells[middle + 1 - rows - 13] = {state: 1, age: 0};\r\n    newGridCells[middle + 1 - rows * 2 - 13] = {state: 1, age: 0};\r\n\r\n    newGridCells[middle - 1 + 3] = {state: 1, age: 0};\r\n    newGridCells[middle + 3] = {state: 1, age: 0};\r\n    newGridCells[middle + 1 + 3] = {state: 1, age: 0};\r\n    newGridCells[middle - 1 - rows + 3] = {state: 1, age: 0};\r\n    newGridCells[middle - 1 - rows * 2 + 3] = {state: 1, age: 0};\r\n    newGridCells[middle + 1 - rows + 3] = {state: 1, age: 0};\r\n    newGridCells[middle + 1 - rows * 2 + 3] = {state: 1, age: 0};\r\n\r\n    newGridCells[middle - 1 + 9] = {state: 1, age: 0};\r\n    newGridCells[middle + 9] = {state: 1, age: 0};\r\n    newGridCells[middle + 1 + 9] = {state: 1, age: 0};\r\n    newGridCells[middle - 1 - rows + 9] = {state: 1, age: 0};\r\n    newGridCells[middle - 1 - rows * 2 + 9] = {state: 1, age: 0};\r\n    newGridCells[middle + 1 - rows + 9] = {state: 1, age: 0};\r\n    newGridCells[middle + 1 - rows * 2 + 9] = {state: 1, age: 0};\r\n\r\n    newGridCells[middle - 1 + 14] = {state: 1, age: 0};\r\n    newGridCells[middle + 14] = {state: 1, age: 0};\r\n    newGridCells[middle + 1 + 14] = {state: 1, age: 0};\r\n    newGridCells[middle - 1 - rows + 14] = {state: 1, age: 0};\r\n    newGridCells[middle - 1 - rows * 2 + 14] = {state: 1, age: 0};\r\n    newGridCells[middle + 1 - rows + 14] = {state: 1, age: 0};\r\n    newGridCells[middle + 1 - rows * 2 + 14] = {state: 1, age: 0};\r\n  } else if (shape === \"Dragons\") {\r\n    newGridCells[middle - 2] = {state: 1, age: 0};\r\n    newGridCells[middle - 3] = {state: 1, age: 0};\r\n    newGridCells[middle + 2] = {state: 1, age: 0};\r\n    newGridCells[middle + 3] = {state: 1, age: 0};\r\n    newGridCells[middle - 2 + rows] = {state: 1, age: 0};\r\n    newGridCells[middle + 2 + rows] = {state: 1, age: 0};\r\n    newGridCells[middle - 7 + rows] = {state: 1, age: 0};\r\n    newGridCells[middle + 7 + rows] = {state: 1, age: 0};\r\n    newGridCells[middle - 2 + rows * 2] = {state: 1, age: 0};\r\n    newGridCells[middle + 2 + rows * 2] = {state: 1, age: 0};\r\n    newGridCells[middle - 2 + rows * 3] = {state: 1, age: 0};\r\n    newGridCells[middle + 2 + rows * 3] = {state: 1, age: 0};\r\n    newGridCells[middle - 6 + rows * 3] = {state: 1, age: 0};\r\n    newGridCells[middle + 6 + rows * 3] = {state: 1, age: 0};\r\n    newGridCells[middle - 7 + rows * 3] = {state: 1, age: 0};\r\n    newGridCells[middle + 7 + rows * 3] = {state: 1, age: 0};\r\n    newGridCells[middle - 2 + rows * 4] = {state: 1, age: 0};\r\n    newGridCells[middle + 2 + rows * 4] = {state: 1, age: 0};\r\n    newGridCells[middle - 5 + rows * 4] = {state: 1, age: 0};\r\n    newGridCells[middle + 5 + rows * 4] = {state: 1, age: 0};\r\n    newGridCells[middle - 3 + rows * 5] = {state: 1, age: 0};\r\n    newGridCells[middle + 3 + rows * 5] = {state: 1, age: 0};\r\n    newGridCells[middle - 3 - rows] = {state: 1, age: 0};\r\n    newGridCells[middle + 3 - rows] = {state: 1, age: 0};\r\n    newGridCells[middle - 5 - rows] = {state: 1, age: 0};\r\n    newGridCells[middle + 5 - rows] = {state: 1, age: 0};\r\n    newGridCells[middle - 4 - rows * 2] = {state: 1, age: 0};\r\n    newGridCells[middle + 4 - rows * 2] = {state: 1, age: 0};\r\n    newGridCells[middle - 5 - rows * 2] = {state: 1, age: 0};\r\n    newGridCells[middle + 5 - rows * 2] = {state: 1, age: 0};\r\n    newGridCells[middle - 6 - rows * 2] = {state: 1, age: 0};\r\n    newGridCells[middle + 6 - rows * 2] = {state: 1, age: 0};\r\n    newGridCells[middle - 5 - rows * 3] = {state: 1, age: 0};\r\n    newGridCells[middle + 5 - rows * 3] = {state: 1, age: 0};\r\n    newGridCells[middle - 2 - rows * 3] = {state: 1, age: 0};\r\n    newGridCells[middle + 2 - rows * 3] = {state: 1, age: 0};\r\n    newGridCells[middle - 2 - rows * 4] = {state: 1, age: 0};\r\n    newGridCells[middle + 2 - rows * 4] = {state: 1, age: 0};\r\n    newGridCells[middle - 3 - rows * 4] = {state: 1, age: 0};\r\n    newGridCells[middle + 3 - rows * 4] = {state: 1, age: 0};\r\n    newGridCells[middle - 4 - rows * 4] = {state: 1, age: 0};\r\n    newGridCells[middle + 4 - rows * 4] = {state: 1, age: 0};\r\n    newGridCells[middle - 3 - rows * 5] = {state: 1, age: 0};\r\n    newGridCells[middle + 3 - rows * 5] = {state: 1, age: 0};\r\n\r\n  } else if (shape === \"Glider\") {\r\n    newGridCells[middle] = {state: 1, age: 0};\r\n    newGridCells[middle + rows + 1] = {state: 1, age: 0};\r\n    newGridCells[middle + rows + 2] = {state: 1, age: 0};\r\n    newGridCells[middle + rows * 2] = {state: 1, age: 0};\r\n    newGridCells[middle + rows * 2 + 1] = {state: 1, age: 0};\r\n  }\r\n  return newGridCells;\r\n}","import React, { useState, useEffect } from \"react\";\nimport { Header } from \"./app-header\";\nimport { GridCell } from \"./grid-cell\";\nimport { Cell, initialDeadCell, initialAliveCell, colorThemes, shapes, getGridFromShape } from \"./utils\";\n\nimport \"./app.css\";\n\nconst rows = 50;\nconst cols = 50;\nconst speeds: number[] = [500, 250, 100];\n\nfunction App() {\n  const [isRunning, setIsRunning] = useState(false);\n  const [currentColor, setCurrentColor] = useState(0);\n  const [currentSpeed, setCurrentSpeed] = useState(1);\n  const [generation, setGeneration] = useState(0);\n  const [gridCells, setGridCells] = useState(Array.from({length: rows * cols}, (v, i) => initialDeadCell));\n\n  const toggleCell = (index: number) => {\n    const newGridCells = [...gridCells];\n    newGridCells[index] = newGridCells[index].state === 0 ? initialAliveCell : initialDeadCell;\n    setGridCells(newGridCells);\n  }\n\n  const clearGrid = () => {\n    const newGridCells = Array.from({length: rows * cols}, (v, i) => initialDeadCell);\n    setGridCells(newGridCells);\n    setGeneration(0);\n  }\n\n  const setShape = (shape: string) => {\n    const newGridCells = getGridFromShape(shape, rows, cols);\n    setGridCells(newGridCells);\n  }\n\n  useEffect(() => {\n    const generationUpdate = () => {\n      const newGridCells: Cell[] = [];\n      const arrayLength = gridCells.length;\n      for (let cell = 0; cell < arrayLength; cell++) {\n        let adjacentAlive = 0;\n        // check the 8 adjacent squares\n        adjacentAlive = adjacentAlive + (cell === 0 ? gridCells[rows * cols - 1].state : gridCells[cell - 1].state);\n        adjacentAlive = adjacentAlive + (cell === (rows * cols - 1) ? gridCells[0].state : gridCells[cell + 1].state);\n        adjacentAlive = adjacentAlive + ((cell - cols - 1) < 0 ? gridCells[arrayLength + (cell - cols - 1)].state : gridCells[cell - cols - 1].state);\n        adjacentAlive = adjacentAlive + ((cell - cols) < 0 ? gridCells[arrayLength + (cell - cols)].state : gridCells[cell - cols].state);\n        adjacentAlive = adjacentAlive + ((cell - cols + 1) < 0 ? gridCells[arrayLength + (cell - cols + 1)].state : gridCells[cell - cols + 1].state);\n        adjacentAlive = adjacentAlive + ((cell + cols - 1) >= arrayLength ? gridCells[(cell + cols - 1) - arrayLength].state : gridCells[cell + cols - 1].state);\n        adjacentAlive = adjacentAlive + ((cell + cols) >= arrayLength ? gridCells[(cell + cols) - arrayLength].state : gridCells[cell + cols].state);\n        adjacentAlive = adjacentAlive + ((cell + cols + 1) >= arrayLength ? gridCells[(cell + cols + 1) - arrayLength].state : gridCells[cell + cols + 1].state);\n\n        // determine new state and age\n        const isAlive = gridCells[cell].state === 1;\n        if (adjacentAlive === 3 || (adjacentAlive === 2 && isAlive)) {\n          const age = gridCells[cell].age + 1;\n          newGridCells.push({age: isAlive ? age % colorThemes[currentColor].colors.length : 0, state: 1})\n        } else {\n          newGridCells.push(initialDeadCell);\n        }\n      }\n      setGridCells(newGridCells);\n      setGeneration(generation + 1);\n    }\n\n    let timer: any;\n    if (isRunning) {\n      timer = window.setInterval(() => {\n        generationUpdate();\n      }, speeds[currentSpeed]);\n    }\n    return () => {\n      window.clearInterval(timer);\n    };\n  }, [isRunning, currentSpeed, currentColor, generation, gridCells]);\n\n  const handleChange = (event: any) => {\n    setCurrentSpeed(event.target.value);\n  }\n\n  return (\n    <div className=\"App\">\n      <Header />\n      <div className=\"grid-container\">\n        <div className=\"themes\">\n          Choose Color Theme\n          { colorThemes.map((theme, i) =>\n              <button key={`theme-${i}`} onClick={() => setCurrentColor(i)}>{theme.name}</button>\n          )}\n        </div>\n        <div className=\"grid\">\n          { gridCells.map((cell, i) =>\n            <GridCell\n              key={`cell-${i}`}\n              index={i}\n              onSelectCell={() => toggleCell(i)}\n              isRunning={isRunning}\n              color={cell.state === 0 ? \"aliceblue\" : colorThemes[currentColor].colors[cell.age]}\n            />\n          )}\n        </div>\n        <div className=\"shapes\">\n          Add Shape\n          { shapes.map((shape, i) =>\n              <button key={`shape-${i}`} onClick={() => setShape(shape.name)}>{shape.name}</button>\n          )}\n        </div>\n      </div>\n      <div className=\"generation\">Current Generation: {generation}</div>\n      <div className=\"control-buttons\">\n        <button disabled={isRunning} onClick={() => setIsRunning(true)}>Start</button>\n        <button disabled={!isRunning} onClick={() => setIsRunning(false)}>Stop</button>\n        <button disabled={isRunning} onClick={() => clearGrid()}>Clear</button>\n        <div className=\"slider-container\">\n          <input type=\"range\" min=\"0\" max=\"2\" value={currentSpeed} className=\"slider\" id=\"myRange\" onChange={handleChange} />\n          <div>\n            <span className=\"speed\">Slow</span>\n            <span className=\"speed\">Med</span>\n            <span className=\"speed\">Fast</span>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './app';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}